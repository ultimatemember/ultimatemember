1770999086
ijeqzL8hUX%3A5706603e6507b8c3ae31ca9a2b79c4a0-d559f19fd9d50223106d9fe6ee97982e
s:7528:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImQ1NTlmMTlmZDlkNTAyMjMxMDZkOWZlNmVlOTc5ODJlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTQ6InVzZXJfcm9sZXMucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTM6ImluY2x1ZGVzL2FkbWluL2NvcmUvcGFja2FnZXMvMi4wLWJldGExL3VzZXJfcm9sZXMucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0ODIxOiI8P3BocApnbG9iYWwgJHdwZGI7CgokcmVzcG9uc2Vfcm9sZXNfZGF0YSA9IGFycmF5KCk7CgovL1VNIFJvbGVzIHRvIFdQIFJvbGVzCi8vYWxsIFVNIFJvbGVzIGZyb20gcG9zdCB0eXBlCiRyb2xlX2tleXMgPSBhcnJheSgpOwoKcmVnaXN0ZXJfcG9zdF90eXBlKCAndW1fcm9sZScsIGFycmF5KAoJJ2xhYmVscycgPT4gYXJyYXkoCgkJJ25hbWUnICAgICAgICAgICAgICAgICAgPT4gX18oICdVc2VyIFJvbGVzJyApLAoJCSdzaW5ndWxhcl9uYW1lJyAgICAgICAgID0+IF9fKCAnVXNlciBSb2xlJyApLAoJCSdhZGRfbmV3JyAgICAgICAgICAgICAgID0+IF9fKCAnQWRkIE5ldycgKSwKCQknYWRkX25ld19pdGVtJyAgICAgICAgICA9PiBfXygnQWRkIE5ldyBVc2VyIFJvbGUnICksCgkJJ2VkaXRfaXRlbScgICAgICAgICAgICAgPT4gX18oJ0VkaXQgVXNlciBSb2xlJyksCgkJJ25vdF9mb3VuZCcgICAgICAgICAgICAgPT4gX18oJ1lvdSBkaWQgbm90IGNyZWF0ZSBhbnkgdXNlciByb2xlcyB5ZXQnKSwKCQknbm90X2ZvdW5kX2luX3RyYXNoJyAgICA9PiBfXygnTm90aGluZyBmb3VuZCBpbiBUcmFzaCcpLAoJCSdzZWFyY2hfaXRlbXMnICAgICAgICAgID0+IF9fKCdTZWFyY2ggVXNlciBSb2xlcycpCgkpLAoJJ3Nob3dfdWknID0+IHRydWUsCgknc2hvd19pbl9tZW51JyA9PiBmYWxzZSwKCSdwdWJsaWMnID0+IGZhbHNlLAoJJ3N1cHBvcnRzJyA9PiBhcnJheSgndGl0bGUnKQopICk7CgoKJHVtX3JvbGVzID0gZ2V0X3Bvc3RzKCBhcnJheSgKCSdwb3N0X3R5cGUnICAgICAgICAgPT4gJ3VtX3JvbGUnLAoJJ3Bvc3RzX3Blcl9wYWdlJyAgICA9PiAtMSwKCSdwb3N0X3N0YXR1cycgICAgICAgPT4gJ3B1Ymxpc2gnCikgKTsKCiRyb2xlc19hc3NvY2lhdGlvbnMgPSBhcnJheSgpOwoKJGFsbF93cF9yb2xlcyA9IGFycmF5X2tleXMoIGdldF9lZGl0YWJsZV9yb2xlcygpICk7CgppZiAoICEgZW1wdHkoICR1bV9yb2xlcyApICkgewoJZm9yZWFjaCAoICR1bV9yb2xlcyBhcyAkdW1fcm9sZSApIHsKCQkvL29sZCByb2xlIGtleSB3aGljaCBpbnNlcnRlZCBmb3IgZWFjaCB1c2VyIHRvIHVzZXJtZXRhICJyb2xlIgoJCSRrZXlfaW5fbWV0YSA9ICR1bV9yb2xlLT5wb3N0X25hbWU7CgoJCWlmICggcHJlZ19tYXRjaCggIi9bYS16MC05XSskL2kiLCAkdW1fcm9sZS0+cG9zdF90aXRsZSApICkgewoJCQkkcm9sZV9rZXkgPSBzYW5pdGl6ZV90aXRsZSggJHVtX3JvbGUtPnBvc3RfdGl0bGUgKTsKCQl9IGVsc2UgewoJCQkkYXV0b19pbmNyZW1lbnQgPSBVTSgpLT5vcHRpb25zKCktPmdldCggJ2N1c3RvbV9yb2xlc19pbmNyZW1lbnQnICk7CgkJCSRhdXRvX2luY3JlbWVudCA9ICEgZW1wdHkoICRhdXRvX2luY3JlbWVudCApID8gJGF1dG9faW5jcmVtZW50IDogMTsKCQkJJHJvbGVfa2V5ID0gJ2N1c3RvbV9yb2xlXycgLiAkYXV0b19pbmNyZW1lbnQ7CgoJCQkkYXV0b19pbmNyZW1lbnQrKzsKCQkJVU0oKS0+b3B0aW9ucygpLT51cGRhdGUoICdjdXN0b21fcm9sZXNfaW5jcmVtZW50JywgJGF1dG9faW5jcmVtZW50ICk7CgkJfQoKCQlpZiAoICEgaW5fYXJyYXkoICRyb2xlX2tleSwgJGFsbF93cF9yb2xlcyApICkgewoJCQkkcm9sZV9rZXlzW10gPSAkcm9sZV9rZXk7CgkJfQoKCQkkYWxsX3JvbGVfbWV0YWRhdGEgPSAkd3BkYi0+Z2V0X3Jlc3VsdHMoCgkJCSR3cGRiLT5wcmVwYXJlKAoJCQkJIlNFTEVDVCBwbS5tZXRhX2tleSwKCQkJCQkJcG0ubWV0YV92YWx1ZQoJCQkJRlJPTSB7JHdwZGItPnBvc3RtZXRhfSBwbQoJCQkJV0hFUkUgcG0ucG9zdF9pZCA9ICVkIEFORAoJCQkJCSAgcG0ubWV0YV9rZXkgTElLRSAlcyIsCgkJCQkkdW1fcm9sZS0+SUQsCgkJCQkiX3VtXyUiCgkJCSksCgkJCUFSUkFZX0EKCQkpOwoKCQkkcm9sZV9tZXRhZGF0YSA9IGFycmF5KCk7CgkJaWYgKCAhIGVtcHR5KCAkYWxsX3JvbGVfbWV0YWRhdGEgKSApIHsKCQkJZm9yZWFjaCAoICRhbGxfcm9sZV9tZXRhZGF0YSBhcyAkbWV0YWRhdGEgKSB7CgoJCQkJaWYgKCAnX3VtX2Nhbl9lZGl0X3JvbGVzJyA9PSAkbWV0YWRhdGFbJ21ldGFfa2V5J10gfHwgJ191bV9jYW5fZGVsZXRlX3JvbGVzJyA9PSAkbWV0YWRhdGFbJ21ldGFfa2V5J10KCQkJCSAgICAgfHwgJ191bV9jYW5fdmlld19yb2xlcycgPT0gJG1ldGFkYXRhWydtZXRhX2tleSddIHx8ICdfdW1fY2FuX2ZvbGxvd19yb2xlcycgPT0gJG1ldGFkYXRhWydtZXRhX2tleSddCgkJCQkgICAgIHx8ICdfdW1fY2FuX2ZyaWVuZF9yb2xlcycgPT0gJG1ldGFkYXRhWydtZXRhX2tleSddIHx8ICdfdW1fY2FuX3Jldmlld19yb2xlcycgPT0gJG1ldGFkYXRhWydtZXRhX2tleSddICkgewoJCQkJCSRtZXRhZGF0YVsnbWV0YV92YWx1ZSddID0gbWF5YmVfdW5zZXJpYWxpemUoICRtZXRhZGF0YVsnbWV0YV92YWx1ZSddICk7CgkJCQl9CgoJCQkJJHJvbGVfbWV0YWRhdGFbICRtZXRhZGF0YVsnbWV0YV9rZXknXSBdID0gJG1ldGFkYXRhWydtZXRhX3ZhbHVlJ107CgkJCX0KCQl9CgoJCWlmICggISBpbl9hcnJheSggJHJvbGVfa2V5LCAkYWxsX3dwX3JvbGVzICkgKSB7CgkJCSRyb2xlX21ldGEgPSBhcnJheV9tZXJnZSggJHJvbGVfbWV0YWRhdGEsIGFycmF5KAoJCQkJJ25hbWUnICAgICAgICAgICAgICA9PiAkdW1fcm9sZS0+cG9zdF90aXRsZSwKCQkJCSd3cF9jYXBhYmlsaXRpZXMnICAgPT4gYXJyYXkoICdyZWFkJyA9PiB0cnVlICksCgkJCQknX3VtX2lzX2N1c3RvbScgICAgID0+IHRydWUsCgkJCSkgKTsKCQl9IGVsc2UgewoJCQkkcm9sZV9tZXRhID0gJHJvbGVfbWV0YWRhdGE7CgkJfQoKCQkvLyRvbGRfa2V5ID0gISBlbXB0eSggJHJvbGVfbWV0YVsnX3VtX2NvcmUnXSApID8gJHJvbGVfbWV0YVsnX3VtX2NvcmUnXSA6ICRyb2xlX2tleTsKCQlpZiAoICEgaW5fYXJyYXkoICRyb2xlX2tleSwgJGFsbF93cF9yb2xlcyApICkgewoJCQkkcm9sZXNfYXNzb2NpYXRpb25zWyAka2V5X2luX21ldGEgXSA9ICd1bV8nIC4gJHJvbGVfa2V5OwoJCX0gZWxzZSB7CgkJCSRyb2xlc19hc3NvY2lhdGlvbnNbICRrZXlfaW5fbWV0YSBdID0gJHJvbGVfa2V5OwoJCX0KCgoJCSRyZXNwb25zZV9yb2xlc19kYXRhW10gPSBhcnJheSgKCQkJJ3JvbGVfa2V5JyAgICAgID0+ICRyb2xlX2tleSwKCQkJJ2tleV9pbl9tZXRhJyAgID0+ICRrZXlfaW5fbWV0YQoJCSk7CgoJCWlmICggISBlbXB0eSggJHJvbGVfbWV0YVsnX3VtX2NvcmUnXSApICkKCQkJdW5zZXQoICRyb2xlX21ldGFbJ191bV9jb3JlJ10gKTsKCgkJdXBkYXRlX29wdGlvbiggInVtX3JvbGVfeyRyb2xlX2tleX1fbWV0YSIsICRyb2xlX21ldGEgKTsKCX0KCgkvL3VwZGF0ZSB1c2VyIHJvbGUgbWV0YSB3aGVyZSByb2xlIGtleXMgc3RvcmVkCglmb3JlYWNoICggJHVtX3JvbGVzIGFzICR1bV9yb2xlICkgewoKCQkka2V5X2luX21ldGEgPSAkdW1fcm9sZS0+cG9zdF9uYW1lOwoKCQkkcm9sZV9rZXkgPSAkcm9sZXNfYXNzb2NpYXRpb25zWyAka2V5X2luX21ldGEgXTsKCQlpZiAoIHN0cnBvcyggJHJvbGVfa2V5LCAndW1fJyApID09PSAwICkKCQkJJHJvbGVfa2V5ID0gc3Vic3RyKCAkcm9sZV9rZXksIDMgKTsKCgkJJHJvbGVfbWV0YSA9IGdldF9vcHRpb24oICJ1bV9yb2xlX3skcm9sZV9rZXl9X21ldGEiICk7CgoJCSRyb2xlX21ldGFkYXRhID0gYXJyYXkoKTsKCQlpZiAoICEgZW1wdHkoICRyb2xlX21ldGEgKSApIHsKCQkJZm9yZWFjaCAoICRyb2xlX21ldGEgYXMgJG1ldGFrZXkgPT4gJG1ldGFkYXRhICkgewoKCQkJCWlmICggJ191bV9jYW5fZWRpdF9yb2xlcycgPT0gJG1ldGFrZXkgfHwgJ191bV9jYW5fZGVsZXRlX3JvbGVzJyA9PSAkbWV0YWtleQoJCQkJICAgICB8fCAnX3VtX2Nhbl92aWV3X3JvbGVzJyA9PSAkbWV0YWtleSB8fCAnX3VtX2Nhbl9mb2xsb3dfcm9sZXMnID09ICRtZXRha2V5CgkJCQkgICAgIHx8ICdfdW1fY2FuX2ZyaWVuZF9yb2xlcycgPT0gJG1ldGFrZXkgfHwgJ191bV9jYW5fcmV2aWV3X3JvbGVzJyA9PSAkbWV0YWtleSApIHsKCgkJCQkJaWYgKCAhIGVtcHR5KCAkbWV0YWRhdGEgKSApIHsKCQkJCQkJZm9yZWFjaCAoICRtZXRhZGF0YSBhcyAkaSA9PiAkcm9sZV9rICkgewoJCQkJCQkJJG1ldGFkYXRhWyAkaSBdID0gJHJvbGVzX2Fzc29jaWF0aW9uc1sgJHJvbGVfayBdOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSBlbHNlaWYgKCAnX3VtX3Byb2ZpbGVjX3VwZ3JhZGVfcm9sZScgPT0gJG1ldGFrZXkgKSB7CgkJCQkJaWYgKCBpc3NldCggJHJvbGVzX2Fzc29jaWF0aW9uc1sgJG1ldGFkYXRhIF0gKSApIHsKCQkJCQkJJG1ldGFkYXRhID0gJHJvbGVzX2Fzc29jaWF0aW9uc1sgJG1ldGFkYXRhIF07CgkJCQkJfSBlbHNlIHsKCQkJCQkJJG1ldGFkYXRhID0gJyc7CgkJCQkJfQoJCQkJfQoKCQkJCSRyb2xlX21ldGFbICRtZXRha2V5IF0gPSAkbWV0YWRhdGE7CgkJCX0KCQl9CgoJCXVwZGF0ZV9vcHRpb24oICJ1bV9yb2xlX3skcm9sZV9rZXl9X21ldGEiLCAkcm9sZV9tZXRhICk7Cgl9Cn0KCnVwZGF0ZV9vcHRpb24oICd1bV9yb2xlcycsICRyb2xlX2tleXMgKTsKCmdsb2JhbCAkd3Bfcm9sZXMsICR3cF92ZXJzaW9uOwppZiAoIHZlcnNpb25fY29tcGFyZSggJHdwX3ZlcnNpb24sICc0LjknLCAnPCcgKSApIHsKCSR3cF9yb2xlcy0+X2luaXQoKTsKCSR3cF9yb2xlcy0+cmVpbml0KCk7Cn0gZWxzZWlmICggbWV0aG9kX2V4aXN0cyggJHdwX3JvbGVzLCAnZm9yX3NpdGUnICkgKSB7Cgkkd3Bfcm9sZXMtPmZvcl9zaXRlKCBnZXRfY3VycmVudF9ibG9nX2lkKCkgKTsKfQoKCi8vdGVtcG9yYXJ5IG9wdGlvbgp1cGRhdGVfb3B0aW9uKCAndW1fcm9sZXNfYXNzb2NpYXRpb25zJywgJHJvbGVzX2Fzc29jaWF0aW9ucyApOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";