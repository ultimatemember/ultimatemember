1762971829
ijeqzL8hUX%3Ab054506561934872d7ef6db15f991486-36a5418b6ed0540b3d2ae6546e97b2c2
s:7364:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjM2YTU0MThiNmVkMDU0MGIzZDJhZTY1NDZlOTdiMmMyIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjI6InJlZ2lzdGVyX2N1c3RvbWl6ZS5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1MjoiaW5jbHVkZXMvYWRtaW4vdGVtcGxhdGVzL2Zvcm0vcmVnaXN0ZXJfY3VzdG9taXplLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6NDY5MjoiPD9waHAgaWYgKCAhIGRlZmluZWQoICdBQlNQQVRIJyApICkgewoJZXhpdDsKfQoKZ2xvYmFsICRwb3N0X2lkOwoKJHVzZV9jdXN0b21fc2V0dGluZ3MgPSAhIGlzc2V0KCAkcG9zdF9pZCApID8gZmFsc2UgOiBnZXRfcG9zdF9tZXRhKCAkcG9zdF9pZCwgJ191bV9yZWdpc3Rlcl91c2VfY3VzdG9tX3NldHRpbmdzJywgdHJ1ZSApOwoKZm9yZWFjaCAoIFVNKCktPnJvbGVzKCktPmdldF9yb2xlcyggX18oICdEZWZhdWx0JywgJ3VsdGltYXRlLW1lbWJlcicgKSApIGFzICRrZXkgPT4gJHZhbHVlICkgewoJJF91bV9yZWdpc3Rlcl9yb2xlID0gVU0oKS0+cXVlcnkoKS0+Z2V0X21ldGFfdmFsdWUoICdfdW1fcmVnaXN0ZXJfcm9sZScsICRrZXkgKTsKCWlmICggISBlbXB0eSggJF91bV9yZWdpc3Rlcl9yb2xlICkgKSB7CgkJJHJlZ2lzdGVyX3JvbGUgPSAkX3VtX3JlZ2lzdGVyX3JvbGU7Cgl9Cn0KCiRyZWdpc3Rlcl9zZWNvbmRhcnlfYnRuID0gISBpc3NldCggJHBvc3RfaWQgKSA/IFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfc2Vjb25kYXJ5X2J0bicgKSA6IGdldF9wb3N0X21ldGEoICRwb3N0X2lkLCAnX3VtX3JlZ2lzdGVyX3NlY29uZGFyeV9idG4nLCB0cnVlICk7Cj8+Cgo8ZGl2IGNsYXNzPSJ1bS1hZG1pbi1tZXRhYm94Ij4KCTw/cGhwCglVTSgpLT5hZG1pbl9mb3JtcygKCQlhcnJheSgKCQkJJ2NsYXNzJyAgICAgPT4gJ3VtLWZvcm0tcmVnaXN0ZXItY3VzdG9taXplIHVtLXRvcC1sYWJlbCcsCgkJCSdwcmVmaXhfaWQnID0+ICdmb3JtJywKCQkJJ2ZpZWxkcycgICAgPT4gYXJyYXkoCgkJCQlhcnJheSgKCQkJCQknaWQnICAgICAgPT4gJ191bV9yZWdpc3Rlcl91c2VfY3VzdG9tX3NldHRpbmdzJywKCQkJCQkndHlwZScgICAgPT4gJ3NlbGVjdCcsCgkJCQkJJ2xhYmVsJyAgID0+IF9fKCAnQXBwbHkgY3VzdG9tIHNldHRpbmdzIHRvIHRoaXMgZm9ybScsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3Rvb2x0aXAnID0+IF9fKCAnU3dpdGNoIHRvIHllcyBpZiB5b3Ugd2FudCB0byBjdXN0b21pemUgdGhpcyBmb3JtIHNldHRpbmdzLCBzdHlsaW5nICZhbXA7IGFwcGVhcmFuY2UnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgICA9PiAkdXNlX2N1c3RvbV9zZXR0aW5ncywKCQkJCQknb3B0aW9ucycgPT4gYXJyYXkoCgkJCQkJCTAgPT4gX18oICdObycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCTEgPT4gX18oICdZZXMnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSksCgkJCQkpLAoJCQkJYXJyYXkoCgkJCQkJJ2lkJyAgICAgICAgICA9PiAnX3VtX3JlZ2lzdGVyX3JvbGUnLAoJCQkJCSd0eXBlJyAgICAgICAgPT4gJ3NlbGVjdCcsCgkJCQkJJ2xhYmVsJyAgICAgICA9PiBfXyggJ0Fzc2lnbiByb2xlIHRvIGZvcm0nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgICAgICAgPT4gISBlbXB0eSggJHJlZ2lzdGVyX3JvbGUgKSA/ICRyZWdpc3Rlcl9yb2xlIDogMCwKCQkJCQknb3B0aW9ucycgICAgID0+IFVNKCktPnJvbGVzKCktPmdldF9yb2xlcyggX18oICdEZWZhdWx0JywgJ3VsdGltYXRlLW1lbWJlcicgKSApLAoJCQkJCSdjb25kaXRpb25hbCcgPT4gYXJyYXkoICdfdW1fcmVnaXN0ZXJfdXNlX2N1c3RvbV9zZXR0aW5ncycsICc9JywgMSApLAoJCQkJKSwKCQkJCWFycmF5KAoJCQkJCSdpZCcgICAgICAgICAgPT4gJ191bV9yZWdpc3Rlcl90ZW1wbGF0ZScsCgkJCQkJJ3R5cGUnICAgICAgICA9PiAnc2VsZWN0JywKCQkJCQknbGFiZWwnICAgICAgID0+IF9fKCAnVGVtcGxhdGUnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd2YWx1ZScgICAgICAgPT4gVU0oKS0+cXVlcnkoKS0+Z2V0X21ldGFfdmFsdWUoICdfdW1fcmVnaXN0ZXJfdGVtcGxhdGUnLCBudWxsLCBVTSgpLT5vcHRpb25zKCktPmdldCggJ3JlZ2lzdGVyX3RlbXBsYXRlJyApICksCgkJCQkJJ29wdGlvbnMnICAgICA9PiBVTSgpLT5zaG9ydGNvZGVzKCktPmdldF90ZW1wbGF0ZXMoICdyZWdpc3RlcicgKSwKCQkJCQknY29uZGl0aW9uYWwnID0+IGFycmF5KCAnX3VtX3JlZ2lzdGVyX3VzZV9jdXN0b21fc2V0dGluZ3MnLCAnPScsIDEgKSwKCQkJCSksCgkJCQlhcnJheSgKCQkJCQknaWQnICAgICAgICAgID0+ICdfdW1fcmVnaXN0ZXJfbWF4X3dpZHRoJywKCQkJCQkndHlwZScgICAgICAgID0+ICd0ZXh0JywKCQkJCQknbGFiZWwnICAgICAgID0+IF9fKCAnTWF4LiBXaWR0aCAocHgpJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndG9vbHRpcCcgICAgID0+IF9fKCAnVGhlIG1heGltdW0gd2lkdGggb2Ygc2hvcnRjb2RlIGluIHBpeGVscyBlLmcuIDYwMHB4JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnICAgICAgID0+IFVNKCktPnF1ZXJ5KCktPmdldF9tZXRhX3ZhbHVlKCAnX3VtX3JlZ2lzdGVyX21heF93aWR0aCcsIG51bGwsIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfbWF4X3dpZHRoJyApICksCgkJCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ191bV9yZWdpc3Rlcl91c2VfY3VzdG9tX3NldHRpbmdzJywgJz0nLCAxICksCgkJCQkpLAoJCQkJYXJyYXkoCgkJCQkJJ2lkJyAgICAgICAgICA9PiAnX3VtX3JlZ2lzdGVyX2ljb25zJywKCQkJCQkndHlwZScgICAgICAgID0+ICdzZWxlY3QnLAoJCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdGaWVsZCBJY29ucycsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3Rvb2x0aXAnICAgICA9PiBfXyggJ1doZXRoZXIgdG8gc2hvdyBmaWVsZCBpY29ucyBhbmQgd2hlcmUgdG8gc2hvdyB0aGVtIHJlbGF0aXZlIHRvIHRoZSBmaWVsZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3ZhbHVlJyAgICAgICA9PiBVTSgpLT5xdWVyeSgpLT5nZXRfbWV0YV92YWx1ZSggJ191bV9yZWdpc3Rlcl9pY29ucycsIG51bGwsIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfaWNvbnMnICkgKSwKCQkJCQknb3B0aW9ucycgICAgID0+IGFycmF5KAoJCQkJCQknZmllbGQnID0+IF9fKCAnU2hvdyBpbnNpZGUgdGV4dCBmaWVsZCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJCSdsYWJlbCcgPT4gX18oICdTaG93IHdpdGggbGFiZWwnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQknb2ZmJyAgID0+IF9fKCAnVHVybiBvZmYnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSksCgkJCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ191bV9yZWdpc3Rlcl91c2VfY3VzdG9tX3NldHRpbmdzJywgJz0nLCAxICksCgkJCQkpLAoJCQkJYXJyYXkoCgkJCQkJJ2lkJyAgICAgICAgICA9PiAnX3VtX3JlZ2lzdGVyX3ByaW1hcnlfYnRuX3dvcmQnLAoJCQkJCSd0eXBlJyAgICAgICAgPT4gJ3RleHQnLAoJCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdQcmltYXJ5IEJ1dHRvbiBUZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndG9vbHRpcCcgICAgID0+IF9fKCAnQ3VzdG9taXplIHRoZSBidXR0b24gdGV4dCcsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3ZhbHVlJyAgICAgICA9PiBVTSgpLT5xdWVyeSgpLT5nZXRfbWV0YV92YWx1ZSggJ191bV9yZWdpc3Rlcl9wcmltYXJ5X2J0bl93b3JkJywgbnVsbCwgVU0oKS0+b3B0aW9ucygpLT5nZXQoICdyZWdpc3Rlcl9wcmltYXJ5X2J0bl93b3JkJyApICksCgkJCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ191bV9yZWdpc3Rlcl91c2VfY3VzdG9tX3NldHRpbmdzJywgJz0nLCAxICksCgkJCQkpLAoJCQkJYXJyYXkoCgkJCQkJJ2lkJyAgICAgICAgICA9PiAnX3VtX3JlZ2lzdGVyX3NlY29uZGFyeV9idG4nLAoJCQkJCSd0eXBlJyAgICAgICAgPT4gJ3NlbGVjdCcsCgkJCQkJJ2xhYmVsJyAgICAgICA9PiBfXyggJ1Nob3cgU2Vjb25kYXJ5IEJ1dHRvbicsICd1bHRpbWF0ZS1tZW1iZXInICksCgkJCQkJJ3ZhbHVlJyAgICAgICA9PiAkcmVnaXN0ZXJfc2Vjb25kYXJ5X2J0biwKCQkJCQknY29uZGl0aW9uYWwnID0+IGFycmF5KCAnX3VtX3JlZ2lzdGVyX3VzZV9jdXN0b21fc2V0dGluZ3MnLCAnPScsIDEgKSwKCQkJCQknb3B0aW9ucycgICAgID0+IGFycmF5KAoJCQkJCQkwID0+IF9fKCAnTm8nLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCQkxID0+IF9fKCAnWWVzJywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkpLAoJCQkJKSwKCQkJCWFycmF5KAoJCQkJCSdpZCcgICAgICAgICAgPT4gJ191bV9yZWdpc3Rlcl9zZWNvbmRhcnlfYnRuX3dvcmQnLAoJCQkJCSd0eXBlJyAgICAgICAgPT4gJ3RleHQnLAoJCQkJCSdsYWJlbCcgICAgICAgPT4gX18oICdTZWNvbmRhcnkgQnV0dG9uIFRleHQnLCAndWx0aW1hdGUtbWVtYmVyJyApLAoJCQkJCSd0b29sdGlwJyAgICAgPT4gX18oICdDdXN0b21pemUgdGhlIGJ1dHRvbiB0ZXh0JywgJ3VsdGltYXRlLW1lbWJlcicgKSwKCQkJCQkndmFsdWUnICAgICAgID0+IFVNKCktPnF1ZXJ5KCktPmdldF9tZXRhX3ZhbHVlKCAnX3VtX3JlZ2lzdGVyX3NlY29uZGFyeV9idG5fd29yZCcsIG51bGwsIFVNKCktPm9wdGlvbnMoKS0+Z2V0KCAncmVnaXN0ZXJfc2Vjb25kYXJ5X2J0bl93b3JkJyApICksCgkJCQkJJ2NvbmRpdGlvbmFsJyA9PiBhcnJheSggJ191bV9yZWdpc3Rlcl9zZWNvbmRhcnlfYnRuJywgJz0nLCAxICksCgkJCQkpLAoJCQkpLAoJCSkKCSktPnJlbmRlcl9mb3JtKCk7Cgk/PgoJPGRpdiBjbGFzcz0iY2xlYXIiPjwvZGl2Pgo8L2Rpdj4KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";